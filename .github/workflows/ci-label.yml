# This workflow aggregates the status of multiple CI workflows associated with a pull request (PR).
# It is triggered when any of the specified workflows complete.
# The workflow checks the status of all relevant CI workflows, and if they have all succeeded,
# it adds a 'ci-passed' label to the PR.
# If any workflow has failed or was skipped, the 'ci-passed' label is not added.
# You can modify the list of workflows in this file to match the relevant workflows in your CI pipeline.

name: CI Status Aggregation

on:
  workflow_run:
    workflows: [
      'KFP backend visualization tests', 
      'KFP e2e tests', 
      'Frontend Tests', 
      'k8s execution tests',
      'kfp-kubernetes library tests',
      'KFP Samples',
      'KFP Runtime Code Tests',
      'KFP SDK Tests',
      'Kubeflow Pipelines V2 integration Tests',
      'KFP Manifests',
      'KFP Backend Tests',
      'KFP Component YAML Test',
      'KFP SDK Docformatter Test',
      'KFP SDK execution tests',
      'KFP SDK Isort Test',
      'KFP SDK Upgrade Test',
      'KFP SDK YAPF Tests',
      'KFP upgrade tests'
    ]
    types:
      - completed

jobs:
  check_ci_status:
    runs-on: ubuntu-latest
    steps:
      - name: Set PR_NUMBER
        id: set-vars
        run: |
          PR_NUMBER=$(jq -r '.workflow_run.pull_requests[0].number' < $GITHUB_EVENT_PATH)

          # Print PR_NUMBER
          echo "PR_NUMBER=$PR_NUMBER"

          # Check if PR_NUMBER is valid
          if [ -z "$PR_NUMBER" ]; then
            echo "Pull Request number could not be determined. Exiting."
            exit 1
          fi

          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

      - name: Check Status of All Workflows
        run: |
          pr_number=${{ env.PR_NUMBER }}
          echo "Checking statuses for PR #$pr_number"

          workflows=(
            'KFP backend visualization tests'
            'KFP e2e tests'
            'Frontend Tests'
            'k8s execution tests'
            'kfp-kubernetes library tests'
            'KFP Samples'
            'KFP Runtime Code Tests'
            'KFP SDK Tests'
            'Kubeflow Pipelines V2 integration Tests'
            'KFP Manifests'
            'KFP Backend Tests'
            'KFP Component YAML Test'
            'KFP SDK Docformatter Test'
            'KFP SDK execution tests'
            'KFP SDK Isort Test'
            'KFP SDK Upgrade Test'
            'KFP SDK YAPF Tests'
            'KFP upgrade tests'
          )

          all_completed=true
          all_succeeded=true

          # Loop through each workflow and check if it is completed
          for workflow in "${workflows[@]}"; do
            echo "Checking workflow: $workflow"
            workflow_runs=$(gh run list --workflow "$workflow" --json number,headSha,status,conclusion --repo $GITHUB_REPOSITORY)

            # Extract the SHA of the PR
            pr_sha=$(gh pr view $pr_number --json headRefOid -q .headRefOid --repo $GITHUB_REPOSITORY)

            # Filter the workflow runs for the specific PR SHA
            status=$(echo "$workflow_runs" | jq -r --arg pr_sha "$pr_sha" '.[] | select(.headSha == $pr_sha) | .status')
            conclusion=$(echo "$workflow_runs" | jq -r --arg pr_sha "$pr_sha" '.[] | select(.headSha == $pr_sha) | .conclusion')

            # Print status for each workflow
            echo "Status for $workflow: $status (Conclusion: $conclusion)"

            # Check if the workflow is not completed yet
            if [ "$status" != "completed" ]; then
              all_completed=false
            fi

            # Check if the workflow did not succeed
            if [ "$conclusion" != "success" ]; then
              all_succeeded=false
            fi
          done

          # Exit if any workflows are still running
          if [ "$all_completed" = false ]; then
            echo "Not all workflows have completed yet. Waiting for all workflows to finish."
            exit 0
          fi

          # Check if all workflows succeeded
          if [ "$all_succeeded" = true ]; then
            echo "All workflows succeeded. Adding 'ci-passed' label."
            gh pr edit $pr_number --add-label "ci-passed" --repo $GITHUB_REPOSITORY
          else
            echo "Not all workflows succeeded."
            exit 1
          fi
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}