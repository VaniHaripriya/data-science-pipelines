name: CI Status Aggregation

on:
  issue_comment:
    types: [created]
  pull_request:
    types: [synchronize]

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  # This job is triggered whenever a new commit is pushed to the PR (i.e., when the PR is synchronized).
  # It ensures that the 'ci-passed' label is removed since the PR now contains new changes that need to be retested.
  remove_ci_passed_label:
    if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    steps:
      - name: Remove 'ci-passed' Label on PR Synchronize
        run: |
          echo "Removing 'ci-passed' label as new changes have been pushed."
          gh pr edit ${{ github.event.pull_request.number }} --remove-label "ci-passed" --repo $GITHUB_REPOSITORY || echo "Label not present"
  
  # This job is triggered when a user comments '/check-ci' on the PR.
  # It checks the status of all workflows triggered by the PR.
  # If all workflows have completed successfully, it adds the 'ci-passed' label to the PR.
  check_ci_status:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/check-ci')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2      
     
      - name: Set PR_NUMBER and PR_SHA
        id: set-vars
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PR_NUMBER=${{ github.event.pull_request.number }}
          else
            PR_NUMBER=${{ github.event.issue.number }}
          fi

          PR_SHA=$(gh pr view $PR_NUMBER --json headRefOid -q .headRefOid --repo $GITHUB_REPOSITORY)
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "PR_SHA=$PR_SHA" >> $GITHUB_ENV 

      - name: Identify Triggered Workflows
        id: identify-triggered
        run: |
          pr_sha=${{ env.PR_SHA }}
          workflow_runs=$(gh run list --json name,headSha,status,conclusion --repo $GITHUB_REPOSITORY) || { echo "Failed to list workflow runs"; exit 1; }

          filtered_workflows=$(echo "$workflow_runs" | jq -r --arg pr_sha "$pr_sha" \
            '.[] | select(.headSha == $pr_sha) | select(.status != "skipped") | .name' | grep -v '^CI Status Aggregation$' | sort -u)

          if [ -z "$filtered_workflows" ]; then
            echo "No workflows were triggered for this PR. Exiting."
            exit 1
          fi

          filtered_workflows_string=$(echo "$filtered_workflows" | tr '\n' ',' | sed 's/,$//')
          echo "TRIGGERED_WORKFLOWS=$filtered_workflows_string" >> $GITHUB_ENV

      - name: Check Status and Conclusion of Triggered Workflows
        id: check-status
        run: |
          pr_sha=${{ env.PR_SHA }}
          all_succeeded=true
          in_progress=false

          IFS=',' read -ra workflows <<< "${{ env.TRIGGERED_WORKFLOWS }}"
          for workflow in "${workflows[@]}"; do
            runs=$(gh run list --workflow "$workflow" --json name,headSha,status,conclusion --repo $GITHUB_REPOSITORY) || { echo "Failed to list runs for workflow $workflow"; exit 1; }

            for run in $(echo "$runs" | jq -r --arg pr_sha "$pr_sha" '.[] | select(.headSha == $pr_sha) | @base64'); do
              _jq() {
                echo ${run} | base64 --decode | jq -r ${1}
              }

              run_name=$(_jq '.name')
              status=$(_jq '.status')
              conclusion=$(_jq '.conclusion')

              echo "Run name: $run_name"
              echo "Status: $status"
              echo "Conclusion: $conclusion"

              if [ "$status" != "completed" ]; then
                echo "Workflow '$workflow' is still in progress. Skipping to next scheduled run."
                in_progress=true
                break 2
              fi

              if [ "$conclusion" != "success" ]; then
                echo "Workflow '$workflow' failed. Exiting."
                all_succeeded=false
                break
              fi
            done
          done

          # Determine final status
          if [ "$in_progress" = true ]; then
            echo "Some workflows are still in progress. Exiting the job without marking as success."
            echo "all_succeeded=false" >> $GITHUB_ENV
            exit 1
          fi

          if [ "$all_succeeded" = true ]; then
            echo "All triggered workflows have completed successfully."
            echo "all_succeeded=true" >> $GITHUB_ENV
          else
            echo "Not all workflows succeeded."
            echo "all_succeeded=false" >> $GITHUB_ENV
            exit 1
          fi

      - name: Add 'ci-passed' Label to PR
        if: ${{ env.all_succeeded == 'true' }}
        run: |
          gh pr edit ${{ env.PR_NUMBER }} --add-label "ci-passed" --repo $GITHUB_REPOSITORY