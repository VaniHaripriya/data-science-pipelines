# This workflow adds the 'ci-passed' label to a pull request once the 'CI Check' workflow completes successfully.
# Resets the 'ci-passed' label status when a pull request is synchronized or reopened, 
# indicating that changes have been pushed and CI needs to rerun.
name: Labeling Workflow

on:
  workflow_run:
    workflows: ["CI Check"]
    types:
      - completed

permissions:
  pull-requests: write
  checks: read

jobs:
  fetch_pr_info:
    name: Fetch PR Info
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: pr

      - name: Extract PR information
        shell: bash
        id: pr_info
        run: |
          pr_number=$(cat pr/pr_number)
          event_action=$(cat pr/event_action)
          echo "PR_NUMBER=${pr_number}" >> $GITHUB_ENV
          echo "EVENT_ACTION=${event_action}" >> $GITHUB_ENV

  add_ci_passed_label:
    name: Add 'ci-passed' label
    runs-on: ubuntu-latest    
    needs: fetch_pr_info
    steps:
      - name: Add 'ci-passed' label
        run: |
          echo "Adding 'ci-passed' label to PR #${{ env.PR_NUMBER }}"
          gh pr edit ${{ env.PR_NUMBER }} --add-label "ci-passed" --repo $GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  reset_ci_passed_label:
    name: Reset 'ci-passed' label on PR Synchronization
    runs-on: ubuntu-latest
    needs: fetch_pr_info
    steps:
      - name: Check and reset label
        run: |
          if [[ "${{ env.EVENT_ACTION }}" == "synchronize" || "${{ env.EVENT_ACTION }}" == "reopened" ]]; then
            echo "Resetting 'ci-passed' label as changes were pushed (event: ${{ env.EVENT_ACTION }})."
            gh pr edit ${{ env.PR_NUMBER }} --remove-label "ci-passed" --repo $GITHUB_REPOSITORY || echo "Label not present"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}